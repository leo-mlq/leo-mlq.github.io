*,
*::before,
*::after {
  box-sizing: inherit;
  margin: 0;
  padding: 0;
}

@media (max-width: 75em) {
  html {
    font-size: 60%;
  }
}

/* 980px / 16px = 61.25em */
@media (max-width: 61.25em) {
  html {
    font-size: 58%;
  }
}

/* 460px / 16px = 28.75em */
@media (max-width: 28.75em) {
  html {
    font-size: 55%;
  }
}

body {
  box-sizing: border-box;
  /*fix difference sizing*/
  scroll-behavior: smooth;
  font-family: sans-serif;
}

/*welcoming section*/
.welcoming {
  width: 100vw;
  height: 100vh;
  /*100 viewpoint height*/
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  background: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)),
    url("/public/images/background.jpg");
  background-color: #000000;
  /*alternative background if image not working*/
  background-position: center center;
  /* Center the image */
  background-repeat: no-repeat;
  /* Do not repeat the image */
  background-size: cover;
  /* Resize the background image to cover the entire container */
}
.welcoming_image {
  max-width: 175px;
  max-height: 175px;
  border-radius: 50%;
}
.welcoming h1 {
  font-family: Ink Free;
  font-size: 3rem;
  margin: 2rem auto;
  color: white;
}
.welcoming p {
  font-family: Florence;
  color: white;
  font-size: 1.5rem;
}

.btns {
  display: block;
  position: relative;
  /*why setting relative? 
  its child .btns:after is set to absolute; which means to make it work parent has to be non-static;
  setting it absolute will take it out of the normal flow;
  setting it relative will make sure that it is in its scheduled location in the flow; if left: and etc will make it move left relative to its original position in the flow*/
  background-color: Black;
  min-width: 200px;
  text-decoration: none;
  text-transform: uppercase;
  text-align: center;
  cursor: pointer;
  /*finger*/
  border-radius: 5px;
  margin: 30px auto;
  padding: 10px 20px;
  color: white;
  font-size: 1.5rem;
  overflow: hidden;
  /*simple mean after hover, width of white background grows from 0 to 100% with a transistion cubic-bezier in 0.3s*/
}
.btns::after {
  content: "";
  background: white;
  mix-blend-mode: exclusion;
  width: 0;
  height: 100%;
  position: absolute;
  bottom: 0px;
  left: 0px;
  transition: all 0.3s cubic-bezier(0.445, 0.05, 0.55, 0.95);
}
.btns:hover::after {
  width: 100%;
}

/*navigation section*/
h1 {
  color: black;
  font-family: "Palatino Linotype", "Book Antiqua", Palatino, serif;
  font-size: 2rem;
  font-weight: 600;
  line-height: 1.5;
  margin-top: 10%;
  min-width: 60vw;
  text-align: center;
}

.h1--noMargin {
  margin: 0;
}

/*.navbar {
  width: 100%;
  height: 60px;
  background: black;
  display: flex;
  justify-content: center;
  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.4);
}
.navbar_list {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-around;
  list-style-type: none;
  overflow: hidden;
}
.navbar_list li {
  margin: 2.5rem;
}
.navbar_list li a {
  text-decoration: none;
  font-size: 1.2rem;
  color: #d2d4cf;
}
.navbar_list li a:hover {
  color: white;
  font-weight: 400;
}

.navbar--sticky {
  position: -webkit-sticky;

  position: sticky;
  top: 0;
  z-index: 1020;
}
.navbar .icon{
  display: none;
}*/
.navbar {
  background: black;
  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.4);
  text-decoration: none;
  position: sticky;
  top: 0;
  z-index: 1020;
  overflow: hidden;
  /*a trick to center a div with 100vw */
  padding: 0 calc(50% - 400px);
}
.navbar a {
  display: inline-block;
  color: #d2d4cf;
  text-align: center;
  padding: 14px 20px;
  margin-left: 15px;
  text-decoration: none;
  font-size: 1.2rem;
}

.navbar a:hover {
  color: white;
  font-weight: 400;
}

.navbar .icon {
  display: none;
}

@media screen and (max-width: 800px) {
  .navbar a:not(:first-child) {
    display: none;
  }
  .navbar a.icon {
    float: right;
    display: block;
  }
  /*.class.class matches any element with both classes*/
  .navbar {
    position: sticky;
  }
  .navbar.responsive .icon {
    position: absolute;
    right: 0;
    top: 0;
  }
  .navbar.responsive a {
    float: none;
    display: block;
    text-align: left;
  }
}

/*about section*/
.container {
  padding: 10% 4rem;
  width: 100%;
  height: auto;
  display: flex;
  flex-direction: column;
  align-items: center;
}
.container .t1 {
  font-family: Bahnschrift Light;
  font-size: 1.3rem;
  line-height: 1.7;
  text-align: center;
  font-weight: 400;
  margin-bottom: 30px;
}
.container .t2 {
  font-size: 1.1rem;
  text-align: justify;
  font-family: Bahnschrift Light;
  font-weight: 100;
  line-height: 1.4;
  margin-bottom: 20px;
  max-width: 600px;
  text-overflow: clip;
}

.divider {
  width: 3.125rem;
  height: 0.25rem;
  border-radius: 0.25rem;
  margin-top: 1.5rem;
  margin-bottom: 1.5rem;
  background-color: #000000;
}

.divider--center {
  display: block;
  margin: 1.5rem auto;
}

.divider--white {
  background-color: white;
}

/*project section*/
.project_container {
  background-color: #f8f9fa;
  height: auto;
  padding: 10% 0;
}

.project_container--white {
  background-color: white;
}

.grid {
  display: grid;
  grid-gap: 50px;
  width: 100%;
  grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
  /*auto-fit handles the number of grid-items it a row even shrinking*/
  max-width: 1280px;
  /*at least 3 items in a row (with margin)*/
  margin: 0 auto;
}
.grid .overlay {
  position: absolute;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  /* Black see-through */
  color: #f1f1f1;
  width: 100%;
  height: 100%;
  transition: 0.5s ease;
  opacity: 0;
  font-size: 2rem;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
}
.grid_item {
  border: solid 1px #383737;
  border-radius: 2px;
  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.4);
  position: relative;
  height: 320px;
}
.grid_item_image {
  height: 100%;
  width: 100%;
  object-fit: cover;
}
.grid_item:hover .overlay {
  opacity: 1;
}
.grid .noDisplay {
  display: none;
}
.project_title {
  height: 30px;
  font-size: 1.5rem;
  width: 100%;
  margin: 0 auto;
  text-align: center;
  text-decoration: none;
}

.viewMore {
  border: none;
  display: block;
  margin: 100px auto 0;
  border-radius: 6px;
}
.viewMore:hover {
  pointer: cursor;
}

/*contact and footer*/
#contact {
  background-color: #212529;
  width: 100%;
  padding: 3% calc(50% - 500px);
}
.contact_box {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  max-width: 1000px;
  height: auto;
}

.contact_box--flexCol {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  width: 100%;
  height: auto;
}
.left_box,
.right_box {
  display: block;
  text-align: left;
  line-height: 1.5rem;
  color: white;
}
.contact_links {
  display: flex;
  flex-direction: column;
  align-items: start;
  flex-wrap: wrap;
}
.contact_details {
  font-family: Bahnschrift Light;
  font-size: 16px;
  text-decoration: none;
  color: white;
  transition: transform 0.3s ease-out;
}
.contact_details:hover {
  transform: translateX(16px);
}
.footer {
  background-color: #212529;
  display: block;
  width: 100%;
  text-align: center;
  padding: 3%;
  color: #e0e0de;
  border-top: solid 2px rgba(255, 255, 255, 0.1);
  margin-left: auto;
  margin-right: auto;
}

@media screen and (max-width: 700px) {
  #contact {
    padding: 3% 10%;
  }
  .contact_box {
    flex-direction: column;
  }
  .left_box {
    margin-bottom: 20px;
  }
}

.blog_container {
  padding: 10% 4rem;
  background-color: #f8f9fa;
  font-size: 1.5rem;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.blog_container a {
  /* visited link */
  /* mouse over link */
}
.blog_container a:link {
  color: blue;
}
.blog_container a:active {
  color: purple;
}
.blog_container a:hover {
  color: red;
}
